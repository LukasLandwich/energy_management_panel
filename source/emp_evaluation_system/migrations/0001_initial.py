# Generated by Django 3.1 on 2020-12-28 17:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_color', models.CharField(choices=[('primary', 'primary'), ('secondary', 'warning'), ('success', 'success'), ('warning', 'warning'), ('danger', 'danger')], default='primary', help_text='Allows configuring the color scheme of the card.', max_length=10)),
                ('card_decoration', models.CharField(choices=[('none', 'none'), ('left', 'left'), ('bottom', 'bottom')], default='none', help_text='Allows configuring the decoration of the card.', max_length=6)),
                ('card_is_button', models.BooleanField(default=False, help_text='If checkt the card can be used as button using the referenced link.With hover effects the card is made recognizable as button.Use cards as button to link additional information pages or function.')),
                ('card_has_tooltip', models.BooleanField(default=False, help_text='If checkt the card shows a tooltip providing your custom tooltip text.Use the tooltips to provide additional information.')),
                ('card_tooltip_text', models.TextField(help_text='Provide the cards tooltip text here.It can have any length but have in mind noone likes reading massive tooltips.')),
            ],
        ),
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_show_title', models.BooleanField(default=False, help_text='If checked the chart will show a customizable title in its header.')),
                ('chart_title', models.CharField(help_text='Provide a short and describing chart title here.', max_length=64)),
                ('chart_type', models.CharField(choices=[('area', 'area'), ('bar', 'bar'), ('donut', 'donut')], default='area', help_text='Allows configuring the chart type.', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationSystemPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_name', models.CharField(help_text='The name of the page as displayed in the nav bar. Should not exceed 18 chars, as the string will be wider then the available space in the navbar.', max_length=18)),
                ('page_slug', models.SlugField(help_text='The name of the page used in the URL of it. Must be unique as two pages of this app cannot have the same url.', unique=True)),
                ('has_report_generation', models.BooleanField(default=False, help_text="If checked the 'create report' button in the top right corner of the page will be visibleproviding the possibility to generate a report out of pages data.")),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PageElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_type', models.CharField(choices=[('container', 'container'), ('element', 'element')], default='container', help_text='Choose the element type.', max_length=9)),
                ('page', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='emp_evaluation_system.evaluationsystempage')),
            ],
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presentation_type', models.CharField(choices=[('card', 'card'), ('chart', 'chart')], default='card', help_text='Choose the presentation type.', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='UIElementContainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_has_Title', models.BooleanField(default=False, help_text='If checked the containers title will be visible in its header.Use short and describing titles to guide the user.')),
                ('container_title', models.CharField(help_text="The containers title as displaied in the containers header.Only visible if 'has_title' is checked.", max_length=64)),
                ('container_has_dropdown', models.BooleanField(default=False, help_text='If checked the referenced dropdown linkes will be shown as a dropdown menu in the top right corner of the containers header.Use the dropdown menu to provide less important functionality in relation to containers data.')),
                ('page_element', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='emp_evaluation_system.pageelement')),
            ],
        ),
        migrations.CreateModel(
            name='UIElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_element', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='emp_evaluation_system.pageelement')),
            ],
        ),
    ]
